openapi: 3.0.3
info:
  title: orders_api
  version: 1.0.0
  description: The project for order goods from stores
paths:
  /api/v1/api/schema:
    get:
      operationId: api_v1_api_schema_retrieve
      description: |-
 OpenApi3 schema for this API. Format can be selected via content negotiation.
 - YAML: application/vnd.oai.openapi
 - JSON: application/vnd.oai.openapi+json
      parameters:
 - in: query
        name: format
        schema:
          type: string
          enum:
 - json
 - yaml
 - in: query
        name: lang
        schema:
          type: string
          enum:
 - af
 - ar
 - ar-dz
 - ast
 - az
 - be
 - bg
 - bn
 - br
 - bs
 - ca
 - cs
 - cy
 - da
 - de
 - dsb
 - el
 - en
 - en-au
 - en-gb
 - eo
 - es
 - es-ar
 - es-co
 - es-mx
 - es-ni
 - es-ve
 - et
 - eu
 - fa
 - fi
 - fr
 - fy
 - ga
 - gd
 - gl
 - he
 - hi
 - hr
 - hsb
 - hu
 - hy
 - ia
 - id
 - ig
 - io
 - is
 - it
 - ja
 - ka
 - kab
 - kk
 - km
 - kn
 - ko
 - ky
 - lb
 - lt
 - lv
 - mk
 - ml
 - mn
 - mr
 - my
 - nb
 - ne
 - nl
 - nn
 - os
 - pa
 - pl
 - pt
 - pt-br
 - ro
 - ru
 - sk
 - sl
 - sq
 - sr
 - sr-latn
 - sv
 - sw
 - ta
 - te
 - tg
 - th
 - tk
 - tr
 - tt
 - udm
 - uk
 - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/basket:
    get:
      operationId: api_v1_basket_retrieve
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_basket_create
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_basket_update
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_basket_destroy
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/categories:
    get:
      operationId: api_v1_categories_list
      description: Класс для просмотра категорий
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/v1/order:
    get:
      operationId: api_v1_order_retrieve
      description: Класс для получения и размешения заказов пользователями
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create
      description: Класс для получения и размешения заказов пользователями
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/partner/orders:
    get:
      operationId: api_v1_partner_orders_retrieve
      description: Класс для получения заказов поставщиками
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/partner/state:
    get:
      operationId: api_v1_partner_state_retrieve
      description: Класс для работы со статусом поставщика
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_partner_state_create
      description: Класс для работы со статусом поставщика
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/partner/update:
    post:
      operationId: api_v1_partner_update_create
      description: Класс для обновления прайса от поставщика
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductInfoList'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Products info.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
  /api/v1/shops:
    get:
      operationId: api_v1_shops_list
      description: Класс для просмотра списка магазинов
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopList'
          description: ''
  /api/v1/user/contact:
    get:
      operationId: api_v1_user_contact_retrieve
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_contact_create
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_user_contact_update
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_user_contact_destroy
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/details:
    get:
      operationId: api_v1_user_details_retrieve
      description: Класс для работы данными пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_details_create
      description: Класс для работы данными пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/login:
    post:
      operationId: api_v1_user_login_create
      description: Класс для авторизации пользователей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/password_reset:
    post:
      operationId: api_v1_user_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address
        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/user/password_reset/confirm:
    post:
      operationId: api_v1_user_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/v1/user/register:
    post:
      operationId: api_v1_user_register_create
      description: Для регистрации покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/register/confirm:
    post:
      operationId: api_v1_user_register_confirm_create
      description: Класс для подтверждения почтового адреса
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
      required:
      - id
      - name
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedProductInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductInfo'
    PaginatedShopList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    Product:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        category:
          type: string
          readOnly: true
      required:
      - category
      - name
    ProductInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 80
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        shop:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        price_rrc:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Recomended retail price
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
      required:
      - id
      - price
      - price_rrc
      - product
      - product_parameters
      - quantity
    ProductParameter:
      type: object
      properties:
        parameter:
          type: string
          readOnly: true
        value:
          type: string
          maxLength: 128
      required:
      - parameter
      - value
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        state:
          type: boolean
          title: Order receipt status
      required:
      - id
      - name
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
